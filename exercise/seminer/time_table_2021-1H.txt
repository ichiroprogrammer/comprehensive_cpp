1回目 04/20/2021

[プログラミング規約](#2.1)  
    [型とインスタンス](#2.1.1)  
        [算術型](#2.1.1.1)  
            [整数型](#2.1.1.1.1)  
            [char型](#2.1.1.1.2)  
            [bool型](#2.1.1.1.3)  
            [浮動小数点型](#2.1.1.1.4)  
        [enum](#2.1.1.2)  
        [bit field](#2.1.1.3)  
        [class](#2.1.1.4)  
        [struct](#2.1.1.5)  
        [union](#2.1.1.6)  
        [配列](#2.1.1.7)  


2回目 05/11/2021

        [型エイリアス](programming_convention.md#2.1.1.8)  
        [const/constexprインスタンス](programming_convention.md#2.1.1.9)  
        [リテラル](programming_convention.md#2.1.1.10)  
        [型推論](programming_convention.md#2.1.1.11)  
            [auto](programming_convention.md#2.1.1.11.1)  
            [decltype](programming_convention.md#2.1.1.11.2)  
        [インスタンスの初期化](programming_convention.md#2.1.1.12)  
            [リスト初期化、一様初期化(uniform initialization)](programming_convention.md#2.1.1.12.1)  

3回目 05/25/2021
        [クラスとインスタンス](#2.1.2)  
            [ファイルの使用方法](#2.1.2.1)  
            [クラスの規模](#2.1.2.2)  
                [行数](#2.1.2.2.1)  
                [メンバの数](#2.1.2.2.2)  
                [凝集度](#2.1.2.2.3)                        --- 演習
            [アクセスレベルと隠蔽化](#2.1.2.3)  
            [継承/派生](#2.1.2.4)  
                [インターフェースの継承](#2.1.2.4.1)  
                [多重継承](#2.1.2.4.2)  
            [非静的なメンバ変数/定数の初期化](#2.1.2.5)     --- 演習

4回目 06/11/2021
            [静的なメンバ変数/定数の初期化](#2.1.2.6)  
            [mutableなメンバ変数](#2.1.2.7)  
            [スライシング](#2.1.2.8)                    --- Clone 演習
            [オブジェクトの所有権](#2.1.2.9)            --- 演習 
            [オブジェクトのライフタイム](#2.1.2.10)  

5回目 06/22/2021 V02.07 これまでの復習
            [静的なメンバ変数/定数の初期化](#2.1.2.6)  
        [const/constexprインスタンス](programming_convention.md#2.1.1.9)  
            [rvalue]
            [スライシング](#2.1.2.8)
            [オブジェクトの所有権](#2.1.2.9)

6回目 07/14/2021 V02.07
            [関数/メンバ関数](programming_convention.md#2.1.3)  
                [クラス外関数](programming_convention.md#2.1.3.1) --- 演習  
                [メンバ関数](programming_convention.md#2.1.3.2) --- 演習   
                    [コンパイラ生成のメンバ関数](programming_convention.md#2.1.3.2.1)  

7回目 07/28/2021 V02.07
            [関数/メンバ関数](programming_convention.md#2.1.3)  
                [メンバ関数](programming_convention.md#2.1.3.2)  
                    [コンストラクタ](programming_convention.md#2.1.3.2.2) --- 演習 
                    [copyコンストラクタ、copy代入演算子](programming_convention.md#2.1.3.2.3) --- 演習 
                    [moveコンストラクタ、move代入演算子](programming_convention.md#2.1.3.2.4)  
                    [初期化子リストコンストラクタ](programming_convention.md#2.1.3.2.5)  
                    [デストラクタ](programming_convention.md#2.1.3.2.6)  
                    [オーバーライド](programming_convention.md#2.1.3.2.7)  

8回目 08/16/2021 V03.00
                    [クラス外関数/メンバ関数共通](#2.3.3)  
                        [サイクロマティック複雑度](#2.3.3.1)  
                        [行数](#2.3.3.2)                        --- 演習
                        [オーバーロード](#2.3.3.3)              --- 演習 x 2 
                        [演算子オーバーロード](#2.3.3.4)  


9回目 08/31/2021 V03.00
                    [クラス外関数/メンバ関数共通](#2.3.3)  
                        [実引数/仮引数](#2.3.3.5)  --- 演習
                        [自動変数](#2.3.3.6)  
                        [戻り値型](#2.3.3.7)  
                        [constexpr関数](#2.3.3.8)
                        [リエントラント性](#2.3.3.9)  
                        [エクセプション処理](#2.3.3.10)  
                        [ビジーループ](#2.3.3.11)  

10回目 09/13 V03.00
             [構文](#2.4)  
                 [複合文](#2.4.1)  
                 [switch文](#2.4.2)  
                 [if-else-if文](#2.4.3)  
                 [範囲for文](#2.4.4)  --- 演習
                 [制御文のネスト](#2.4.5)  
                 [return文](#2.4.6)  
                 [goto文](#2.4.7)  
                 [ラムダ式](#2.4.8)  --- 演習
                 [マクロの中の文](#2.4.9)  
             [演算子](#2.5)  
                 [優先順位](#2.5.1)  
                 [代入演算](#2.5.2)  
                 [ビット演算](#2.5.3)  
                 [論理演算](#2.5.4)  
                 [三項演算子](#2.5.5)  
                 [メモリアロケーション](#2.5.6)  
                     [new](#2.5.6.1)  
                     [delete](#2.5.6.2)  
                     [メモリ制約が強いシステムでの::operator new](#2.5.6.3)  
                 [sizeof](#2.5.7)  
                 [ポインタ間の演算](#2.5.8)  
                 [RTTI](#2.5.9)  
                 [キャスト、暗黙の型変換](#2.5.10)  

11回目 09/27 V03.00 予定
             [プリプロセッサ命令](#2.6)  
                 [マクロ関数](#2.6.1)  
                 [マクロ定数](#2.6.2)  
             [パッケージとその構成ファイル](#2.7)  
                 [パッケージの実装と公開](#2.7.1)  
                 [識別子の宣言、定義](#2.7.2)  
                 [依存関係](#2.7.3)  
                 [二重読み込みの防御](#2.7.4)  
                 [ヘッダファイル内の#include](#2.7.5)  
                 [#includeするファイルの順番](#2.7.6)  
                 [#includeで指定されるパス名](#2.7.7)  
             [スコープ](#2.8)  
                 [スコープの定義と原則](#2.8.1)  
                 [using宣言/usingディレクティブ](#2.8.2)  
                 [実引数依存探索](#2.8.3)  
                 [namespaceのエイリアス](#2.8.4)  
             [ランタイムの効率](#2.9)  
                 [前置/後置演算子の選択](#2.9.1)  
                 [operator X、operator x=の選択](#2.9.2)  
                 [関数の戻り値オブジェクト](#2.9.3)  
                 [move処理](#2.9.4)  
                 [extern template](#2.9.5)  

             [その他](#2.11)  
                 [assertion](#2.11.1)  
                 [アセンブラ](#2.11.2)  
                 [言語拡張機能](#2.11.3)  
             [特に重要なプログラミング規約](#2.12)  

