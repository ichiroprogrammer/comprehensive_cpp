予定全項目
[プログラミング規約](#2) 全体  
[コード解析](#3) 全体 

1回目 5/12/2022 6/2/2022
    2.1 [型とインスタンス](#2.1)                                            p22
         2.1.1 [算術型](#2.1.1)  
             2.1.1.1 [整数型](#2.1.1.1)  
             2.1.1.2 [char型](#2.1.1.2)                                     演習
             2.1.1.3 [bool型](#2.1.1.3)  
             2.1.1.4 [浮動小数点型](#2.1.1.4)                               演習
         2.1.2 [enum](#2.1.2)  
         2.1.3 [bit field](#2.1.3)  
         2.1.4 [class](#2.1.4)  
         2.1.5 [struct](#2.1.5)  
         2.1.6 [union](#2.1.6)  

2回目 5/25/2022
         2.1.7 [配列](#2.1.7)                                               p31
         2.1.8 [型エイリアス](#2.1.8)                                       演習
         2.1.9 [const/constexprインスタンス](#2.1.9)                        演習
         2.1.10 [リテラル](#2.1.10)                                         演習
         2.1.11 [型推論](#2.1.11)                                           p34
             2.1.11.1 [auto](#2.1.11.1)  
         2.1.12 [インスタンスの初期化](#2.1.12)                             p36 演習
             2.1.12.1 [一様初期化(uniform initialization)](#2.1.12.1)  
         2.1.13 [rvalue](#2.1.13)                                           -> expressionの説明

3回目 6/22/2022
    2.2 [クラスとインスタンス](#2.2)                                        p39
        2.2.1 [ファイルの使用方法](#2.2.1)  
        2.2.2 [クラスの規模](#2.2.2)  
            2.2.2.1 [行数](#2.2.2.1)  
            2.2.2.2 [メンバの数](#2.2.2.2)  
            2.2.2.3 [凝集度](#2.2.2.3)                                      演習
        2.2.3 [アクセスレベルと隠蔽化](#2.2.3)  
        2.2.4 [継承/派生](#2.2.4)  
            2.2.4.1 [インターフェースの継承](#2.2.4.1)  
            2.2.4.2 [多重継承](#2.2.4.2)  
        2.2.5 [非静的なメンバ変数/定数の初期化](#2.2.5)  
        2.2.6 [静的なメンバ変数/定数の初期化](#2.2.6)  
        2.2.7 [mutableなメンバ変数](#2.2.7)  
        2.2.8 [スライシング](#2.2.8)  
        2.2.9 [オブジェクトの所有権](#2.2.9)  
        2.2.10 [オブジェクトのライフタイム](#2.2.10)  

4回目 6/29/2022
    2.3 [関数/メンバ関数](#2.3)                                             p47
        2.3.1 [クラス外関数](#2.3.1)  
        2.3.2 [メンバ関数](#2.3.2)                                          演習
            2.3.2.1 [コンパイラ生成のメンバ関数](#2.3.2.1)                  演習
            2.3.2.2 [コンストラクタ](#2.3.2.2)                              演習
            2.3.2.3 [copyコンストラクタ、copy代入演算子](#2.3.2.3)
            2.3.2.4 [moveコンストラクタ、move代入演算子](#2.3.2.4)
            2.3.2.5 [初期化子リストコンストラクタ](#2.3.2.5)  
            2.3.2.6 [デストラクタ](#2.3.2.6)  
            2.3.2.7 [オーバーライド](#2.3.2.7)  

5回目 7/7/2022
        2.3.3 [クラス外関数/メンバ関数共通](#2.3.3)                         p54
            2.3.3.1 [サイクロマティック複雑度](#2.3.3.1)  
            2.3.3.2 [行数](#2.3.3.2)                                        演習
            2.3.3.3 [オーバーロード](#2.3.3.3)  
            2.3.3.4 [演算子オーバーロード](#2.3.3.4)  
            2.3.3.5 [実引数/仮引数](#2.3.3.5)  
            2.3.3.6 [自動変数](#2.3.3.6)  
            2.3.3.7 [戻り値型](#2.3.3.7)  
            2.3.3.8 [constexpr関数](#2.3.3.8)                               演習
            2.3.3.9 [リエントラント性](#2.3.3.9)  
            2.3.3.10 [エクセプション処理](#2.3.3.10)  
            2.3.3.11 [ビジーループ](#2.3.3.11)  

6回目 7/20/2022
    2.4 [構文](#2.4)                                                        p66
        2.4.1 [複合文](#2.4.1)  
        2.4.2 [switch文](#2.4.2)  
        2.4.3 [if-else-if文](#2.4.3)  
        2.4.4 [範囲for文](#2.4.4)                                           演習                                         
        2.4.5 [制御文のネスト](#2.4.5)  
        2.4.6 [return文](#2.4.6)  
        2.4.7 [goto文](#2.4.7)  
        2.4.8 [ラムダ式](#2.4.8)                                            演習
        2.4.9 [マクロの中の文](#2.4.9)  

    2.5 [演算子](#2.5)                                                      p73
        2.5.1 [優先順位](#2.5.1)  
        2.5.2 [代入演算](#2.5.2)  
        2.5.3 [ビット演算](#2.5.3)  
        2.5.4 [論理演算](#2.5.4)  
        2.5.5 [三項演算子](#2.5.5)                                          演習
        2.5.6 [メモリアロケーション](#2.5.6)  
            2.5.6.1 [new](#2.5.6.1)  
            2.5.6.2 [delete](#2.5.6.2)                                      演習
            2.5.6.3 [メモリ制約が強いシステムでの::operator new](#2.5.6.3)  

7回目 8/25/2022                                                              p77
    2.5 [演算子](#2.5)
        2.5.7 [sizeof](#2.5.7)                                              演習
        2.5.8 [ポインタ間の演算](#2.5.8)  
        2.5.9 [RTTI](#2.5.9)                                                演習
        2.5.10 [キャスト、暗黙の型変換](#2.5.10)  
    2.6 [プリプロセッサ命令](#2.6)                                          p81
        2.6.1 [関数型マクロ](#2.6.1)  
        2.6.2 [マクロ定数](#2.6.2)  
    2.7 [パッケージとその構成ファイル](#2.7)  
        2.7.1 [パッケージの実装と公開](#2.7.1)  
        2.7.2 [識別子の宣言、定義](#2.7.2)  
        2.7.3 [依存関係](#2.7.3)  
        2.7.4 [二重読み込みの防御](#2.7.4)  
        2.7.5 [ヘッダファイル内の#include](#2.7.5)  
        2.7.6 [#includeするファイルの順番](#2.7.6)  
        2.7.7 [#includeで指定するパス名](#2.7.7)                            p86

8回目 9/8/2022
    2.8 [スコープ](#2.8)                                                    p86
        2.8.1 [スコープの定義と原則](#2.8.1)  
        2.8.2 [名前空間](#2.8.2)  
        2.8.3 [using宣言/usingディレクティブ](#2.8.3)  
        2.8.4 [ADLと名前空間による修飾の省略](#2.8.4)  
        2.8.5 [名前空間のエイリアス](#2.8.5)                                p89
    2.9 [ランタイムの効率](#2.9)  
        2.9.1 [前置/後置演算子の選択](#2.9.1)  
        2.9.2 [operator X、operator x=の選択](#2.9.2)  
        2.9.3 [関数の戻り値オブジェクト](#2.9.3)  
        2.9.4 [move処理](#2.9.4)  
        2.9.5 [extern template](#2.9.5)  

    2.10 [標準クラス、関数の使用制限](#2.10)  
    2.11 [その他](#2.11)  
        2.11.1 [assertion](#2.11.1)  
        2.11.2 [アセンブラ](#2.11.2)  
        2.11.3 [言語拡張機能](#2.11.3)  

9回目 9/30/2022
    2.12 [特に重要なプログラミング規約](#2.12)  
    3 [コード解析](#3)  
        3.1 [g++](#3.1)  
        3.2 [clang++](#3.2)  
        3.3 [コンパイラによる静的解析](#3.3)  
            3.3.1 [g++の警告機能](#3.3.1)  
            3.3.2 [clang++の警告機能](#3.3.2)  
        3.4 [scan-buildによる静的解析](#3.4)  
        3.5 [sanitizerによる動的解析](#3.5)  
        3.6 [まとめ](#3.6)  


